// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/RipperAcskt/innotaxi/internal/service (interfaces: TokenRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenRepo is a mock of TokenRepo interface.
type MockTokenRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTokenRepoMockRecorder
}

// MockTokenRepoMockRecorder is the mock recorder for MockTokenRepo.
type MockTokenRepoMockRecorder struct {
	mock *MockTokenRepo
}

// NewMockTokenRepo creates a new mock instance.
func NewMockTokenRepo(ctrl *gomock.Controller) *MockTokenRepo {
	mock := &MockTokenRepo{ctrl: ctrl}
	mock.recorder = &MockTokenRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenRepo) EXPECT() *MockTokenRepoMockRecorder {
	return m.recorder
}

// AddToken mocks base method.
func (m *MockTokenRepo) AddToken(arg0 string, arg1 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToken", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToken indicates an expected call of AddToken.
func (mr *MockTokenRepoMockRecorder) AddToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToken", reflect.TypeOf((*MockTokenRepo)(nil).AddToken), arg0, arg1)
}

// GetToken mocks base method.
func (m *MockTokenRepo) GetToken(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockTokenRepoMockRecorder) GetToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockTokenRepo)(nil).GetToken), arg0)
}
